library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
# Get file on R
original_tnt_data_set <- read.table(file.choose(), sep = ',')
training <- original_tnt_data_set[1:17317, -7]
test <- original_tnt_data_set[17318:17417, -7]
library(class)
data_prediction <- knn(training, test, original_tnt_data_set[1:17317, 7], k=0)
View(data_prediction)
View(data_prediction)
data_prediction <- knn(training, test, original_tnt_data_set[1:17317, 7], k=1)
View(data_prediction)
View(data_prediction)
View(test)
typeof(test)
View(test$V1)
View(test)
x <= list("v1","v2")
x <- list("v1","v2")
View(x)
x <- c("v1","v2")
View(x)
typeof(test)
test <- original_tnt_data_set[17318:17417, -7]
typeof(test)
small <- c(0.111, 0.222, 0.333, 0.444 ,0.555, 0.666)
total <- rbind(test, small)
View(total)
length(1418)
size(1418)
length(total
length(total)
total <- rbind(test, small)
View(total)
length(total)
nrow(total)
View(total)
data_prediction <- knn(training, small, original_tnt_data_set[1:17317, 7], k=1)
View(data_prediction)
library(plumber)
p <- plumb("plumber.R")
p <- plumb("plumber.R")
library(plumber)
p <- plumb("plumber.R")
#' Echo the parameter that was sent in
#' @param msg The message to echo back.
#' @get /echo
function(msg=""){
list(msg = paste0("The message is: '", msg, "'"))
}
library(plumber)
p <- plumb("plumber.R")
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
list(msg = paste0("The message is: '", msg, num, "'"))
library(plumber)
list(msg = paste0("The message is: '", msg, num, "'"))
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
read.csv(file="suburbs.csv", header = FALSE, sep ] "",")
read.csv(file="suburbs.csv", header = FALSE, sep = ",")
suburbs <- read.csv(file="suburbs.csv", header = FALSE, sep = ",")
View(suburbs)
suburbs$V1
suburbs$V2
print('hi')
min(suburbs$V2)
max(suburbs$V2)
View(suburbs)
# normalise input suburb
suburbs <- read.csv(file="suburbs.csv", header = FALSE, sep = ",")
View(suburbs)
normalize_suburbs <- function(x) {
(x-min(x)) / (max(x) - min(x))
}
suburbs_normalized <- as.data.frame(lapply(suburbs, normalize_suburbs))
suburbs_normalized <- as.data.frame(lapply(suburbs[2], normalize_suburbs))
View(suburbs_normalized)
full_normalized_suburbs = cbind(suburbs, suburbs_normalized)
View(full_normalized_suburbs)
which(grepl("Acton Park", full_normalized_suburbs$V2))
print(which(grepl("Acton Park", full_normalized_suburbs$V2)))
print(which(grepl("Zuccoli", full_normalized_suburbs$V2)))
full_normalized_suburbs = cbind(suburbs, suburbs_normalized)
View(full_normalized_suburbs)
full_normalized_suburbs = cbind(suburbs, suburbs_normalized)
names(full_normalized_suburbs) <- ("a", "b", "c")
full_normalized_suburbs = cbind(suburbs, suburbs_normalized)
names(full_normalized_suburbs) <- c("a", "b", "c")
View(full_normalized_suburbs)
print(which(grepl("Zuccoli", full_normalized_suburbs$c)))
print(which(grepl(full_normalized_suburbs$a == "Zuccoli")))
View(full_normalized_suburbs)
which(grepl(full_normalized_suburbs$a == "Zuccoli"))
full_normalized_suburbs[full_normalized_suburbs$a == "Zuccoli"]
View(full_normalized_suburbs)
full_normalized_suburbs[full_normalized_suburbs == "Zuccoli",]
x <- full_normalized_suburbs[full_normalized_suburbs == "Zuccoli",]
print(x)
print(x$c)
x <- full_normalized_suburbs[full_normalized_suburbs == "Primbee",]
print(x$c)
x <- full_normalized_suburbs[full_normalized_suburbs == y,]
y = "Lane Cove"
x <- full_normalized_suburbs[full_normalized_suburbs == y,]
print(x$c)
View(suburbs)
suburbs_normalized <- as.data.frame(lapply(suburbs[2], normalize_suburbs))
full_normalized_suburbs = cbind(suburbs, suburbs_normalized)
names(full_normalized_suburbs) <- c("a", "b", "c")
y = "Lane Cove"
normal_suburb <- function(suburb_name){
full_normalized_suburbs[full_normalized_suburbs == y,]
}
try <- normal_suburb('Lane Cove')
print(try)
full_normalized_suburbs[full_normalized_suburbs == y,]$c
normal_suburb <- function(suburb_name){
full_normalized_suburbs[full_normalized_suburbs == y,]$c
}
try <- normal_suburb('Lane Cove')
print(try)
# Postcode handling and normalization START
suburbs <- read.csv(file="postcodes.csv", header = FALSE, sep = ",")
# Postcode handling and normalization START
postcodes <- read.csv(file="postcodes.csv", header = FALSE, sep = ",")
View(postcodes)
normalize_postcodes <- function(x) {
(x-min(x)) / (max(x) - min(x))
}
View(postcodes)
# Postcode handling and normalization START
postcodes <- read.csv(file="postcodes.csv", header = FALSE, sep = ",")
View(postcodes)
normalize_postcodes <- function(x) {
(x-min(x)) / (max(x) - min(x))
}
postcodes_normalized <- as.data.frame(lapply(postcodes[2], normalize_postcodes))
full_normalized_postcodes = cbind(postcodes, postcodes_normalized)
names(full_normalized_postcodes) <- c("a", "b", "c")
View(full_normalized_postcodes)
print(normal_postcode(2000))
normal_postcode <- function(postcode_number){
full_normalized_postcodes[full_normalized_postcodes == postcode_number,]$c
}
print(normal_postcode(2000))
View(full_normalized_postcodes)
View(states)
View(states)
# States handling and normalization START
states <- read.csv(file="statees.csv", header = FALSE, sep = ",")
View(states)
# States handling and normalization START
states <- read.csv(file="states.csv", header = FALSE, sep = ",")
View(states)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
rocco <- read.csv(file="experiment_last.csv", header = FALSE, sep = ",")
View(rocco)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
# Get training set START
training_experiment <- read.csv(file="experiment_last.csv", header = FALSE, sep = ",")
View(training_experiment)
library(plumber)
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
# Get file on R
original_tnt_data_set <- read.table(file.choose(), sep = ',')
View(original_tnt_data_set)
training <- original_tnt_data_set[1:17317, -7]
View(training)
test <- original_tnt_data_set[17318:17417, -7]
View(test)
library(class)
data_prediction <- knn(training, test, original_tnt_data_set[1:17317, 7], k=0)
View(data_prediction)
data_prediction <- knn(training, test, original_tnt_data_set[1:17317, 7], k=1)
View(data_prediction)
data_prediction <- knn(training, test, original_tnt_data_set[1:17317, 7], k=3)
View(data_prediction)
data_prediction <- knn(training, test, original_tnt_data_set[1:17317, 7], k=1, prob = TRUE)
View(data_prediction)
# Get file on R
original_tnt_data_set <- read.table(file.choose(), sep = ',')
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
# Get file on R
original_tnt_data_set <- read.table(file.choose(), sep = ',')
View(original_tnt_data_set)
training <- original_tnt_data_set[1:17317, -7]
View(training)
test <- original_tnt_data_set[17318:17417, -7]
View(test)
data_prediction <- knn(training, test, original_tnt_data_set[1:17317, 7], k=1)
View(data_prediction)
test <- original_tnt_data_set[17318:17417, -7]
library(class)
data_prediction <- knn(training, test, original_tnt_data_set[1:17317, 7], k=1)
View(data_prediction)
library(plumber)
p <- plumb("plumber.R")
p$run(port = 5762)
